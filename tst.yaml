pipeline:
  name: test_serverless_step_group
  identifier: test_serverless_step_group
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.testk8s
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Assume Role
                  identifier: Assume_Role
                  spec:
                    connectorRef: account.harnessImage
                    image: noah1854/nginx
                    shell: Sh
                    command: echo "Assuming Role"
    - stage:
        name: test
        identifier: test
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: tst
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: tst
            deployToAll: false
            infrastructureDefinitions:
              - identifier: tst
          execution:
            steps:
              - stepGroup:
                  name: Serverless Step Group
                  identifier: Serverless_Step_Group
                  steps:
                    - step:
                        type: DownloadManifests
                        name: DownloadManifests
                        identifier: DownloadManifests
                        spec: {}
                        timeout: 10m
                    - step:
                        type: ServerlessAwsLambdaPrepareRollbackV2
                        name: Serverless Aws Lambda Prepare Rollback
                        identifier: Serverless_Aws_Lambda_Prepare_Rollback
                        spec:
                          connectorRef: account.harnessImage
                          envVariables:
                            PLUGIN_AWS_ROLE_ARN: <+pipeline.variables.deploy_role_arn>
                          serverlessVersion: <+pipeline.variables.serverless_version>
                          imagePullPolicy: Always
                          resources:
                            limits:
                              memory: 2G
                          image: noahunor1854/nginx
                        timeout: 10m
                    - step:
                        type: ServerlessAwsLambdaPackageV2
                        name: ServerlessAwsLambdaPackageV2_1
                        identifier: ServerlessAwsLambdaPackageV2_1
                        spec:
                          connectorRef: account.AWS_Connector
                        timeout: 10m
                    - step:
                        type: ServerlessAwsLambdaDeployV2
                        name: ServerlessAwsLambdaDeployV2_1
                        identifier: ServerlessAwsLambdaDeployV2_1
                        spec:
                          connectorRef: account.AWS_Connector
                        timeout: 10m
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: account.testk8s
            rollbackSteps: []
        tags: {}
        delegateSelectors:
          - helm-delegate
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  properties:
    ci:
      codebase:
        connectorRef: testconn
        repoName: cx_sync
        build: <+input>
  delegateSelectors:
    - helm-delegate
