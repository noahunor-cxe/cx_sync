pipeline:
  name: test-SAM
  identifier: testSAM
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: testconn
        repoName: cx_sync
        build: <+input>
  stages:
    - stage:
        name: tst1
        identifier: tst1
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.testk8s
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: nginx
                    shell: Bash
                    command: |-
                      # mkldir test
                      # cd /test/
                      # touch something
                      # git clone https://github.com/noahunor-cxe/k8manifest.git
                      # cd k8manifest/templates
                      echo "Hello World"
          caching:
            enabled: false
            paths: []
        tags:
          Ancestry: ""
        when:
          pipelineStatus: All
    - stage:
        name: test-that
        identifier: testthat
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: nginx
          environment:
            environmentRef: test
            deployToAll: false
            infrastructureDefinitions:
              - identifier: test
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "Hello World"
                          echo $ACCESS_KEY
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        variables:
          - name: ACCESS_KEY
            type: String
            description: ""
            required: false
            value: <+env.identifier>
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
  delegateSelectors:
    - helm-delegate
