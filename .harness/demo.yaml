pipeline:
  name: demo
  identifier: demo
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: testing
        identifier: testing
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          services:
            values:
              - serviceRef: tst
                serviceInputs:
                  serviceDefinition:
                    type: Kubernetes
                    spec:
                      artifacts:
                        primary:
                          primaryArtifactRef: <+input>
                          sources: <+input>
              - serviceRef: test56
            metadata:
              parallel: true
          environments:
            metadata:
              parallel: false
            values:
              - environmentRef: tst
                filters:
                  - identifier: test
                    type: tags
                    entities:
                      - infrastructures
                    spec:
                      tags: |
                        infrastructure.tags.allowedService == <+service.tags.targetInfra>
                      matchType: all
              - environmentRef: test
                filters:
                  - identifier: test
                    type: tags
                    entities:
                      - infrastructures
                    spec:
                      tags: |
                        infrastructure.tags.allowedService == <+service.tags.targetInfra>
                      matchType: all
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "hello world"
                          echo "I am service 1/2"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
