pipeline:
  name: cc-test
  identifier: cctest
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: testconn
        repoName: cx_sync
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: cc-runstep
        identifier: ccrunstep
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          execution:
            steps:
              - stepGroup:
                  name: docker
                  identifier: docker
                  steps:
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: BuildAndPushDockerRegistry_1
                        identifier: BuildAndPushDockerRegistry_1
                        spec:
                          connectorRef: account.harnessImage
                          repo: noah1854/test
                          tags:
                            - <+pipeline.stages.build.spec.execution.steps.custom_variables.output.outputVariables.docker_image_ver_out>
                          caching: false
                          additionalArgs:
                            - "--snapshot-mode=redo"
                            - "--tarPath=/harness/image.tar"
                            - "--destination=<+execution.steps.custom_variables.output.outputVariables.docker_image_name_out>:<+pipeline.stages.build.spec.execution.steps.custom_variables.output.outputVariables.docker_image_ver_out>"
                          envVariables:
                            PLUGIN_DRY_RUN: "true"
                            PLUGIN_BUILDX_LOAD: "false"
                            PLUGIN_DAEMON_OFF: "true"
                            PLUGIN_DOCKER_HOST: unix:///run/user/1000/docker.sock
                    - step:
                        type: BuildAndPushDockerRegistry
                        name: Only Push
                        identifier: Only_Push
                        spec:
                          connectorRef: account.harnessImage
                          repo: noah1854/test
                          tags:
                            - <+pipeline.stages.build.spec.execution.steps.custom_variables.output.outputVariables.docker_image_ver_out>
                          caching: false
                          envVariables:
                            PLUGIN_PUSH_ONLY: "true"
                            DOCKER_HOST: <+pipeline.variables.docker_host>
                            PLUGIN_DAEMON_OFF: "true"
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.testk8s
              namespace: default
              serviceAccountName: ""
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        delegateSelectors:
          - noah-delegate
  variables:
    - name: envvar
      type: String
      description: ""
      required: false
      value: <+env.name>
    - name: envvar2
      type: String
      description: ""
      required: false
      value: <+env.type>
  notificationRules:
    - name: test
      identifier: test
      pipelineEvents:
        - type: StageFailed
          forStages:
            - ccrunstep
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - noah.unor@harness.io
      enabled: true
  delegateSelectors:
    - noah-delegate
