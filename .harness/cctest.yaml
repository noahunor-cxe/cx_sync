pipeline:
  name: cc-test
  identifier: cctest
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: testconn
        repoName: cx_sync
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: cc-runstep
        identifier: ccrunstep
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            paths: []
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: nginx
                    shell: Sh
                    command: |-
                      echo <+pipeline.name>
                      echo "<+pipeline.name>"
                      echo <+project.identifier
                      echo "<+project.identifier"
                      echo <+inputSet>
                      echo <+pipeline.inputSets.names>
                      echo "<+pipeline.inputSets.names>"
                      echo <+pipeline.inputSets[0].name>

                      $inputsetname = "<+pipeline.inputSets.names>"
                      Write-Host "checking the inputsetname $inputsetname"

                      Write-Host "checking1 "<+pipeline.inputSets[0].name>"
                      Write-Host "checking2 "<+pipeline.inputSets[1].name>"




                      $inputsetname = "<+inputSet.name>"
                      Write-Host "Input set used: $inputsetname"
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.testk8s
              namespace: default
              serviceAccountName: ""
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          buildIntelligence:
            enabled: false
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        delegateSelectors:
          - noah-delegate
  variables:
    - name: envvar
      type: String
      description: ""
      required: false
      value: <+env.name>
    - name: envvar2
      type: String
      description: ""
      required: false
      value: <+env.type>
  notificationRules:
    - name: test
      identifier: test
      pipelineEvents:
        - type: StageFailed
          forStages:
            - ccrunstep
      notificationMethod:
        type: Email
        spec:
          userGroups: []
          recipients:
            - noah.unor@harness.io
      enabled: true
  delegateSelectors:
    - noah-delegate
