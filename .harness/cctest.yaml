pipeline:
  name: cc-test
  identifier: cctest
  projectIdentifier: bootcampcinoahunor
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: testconn
        repoName: cx_sync
        build: <+input>
        sparseCheckout: []
  stages:
    - stage:
        name: demo1
        identifier: demo1
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: echo "Hello World"
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: FilesUpload
                  name: FilesUpload_1
                  identifier: FilesUpload_1
                  spec: {}
                  timeout: 15s
            rollbackSteps: []
          service:
            serviceRef: nginx
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>.required()
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        when:
          pipelineStatus: Success
        delegateSelectors: <+input>
    - stage:
        name: cc-runstep
        identifier: ccrunstep
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.testk8s
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - stepGroup:
                  name: tst
                  identifier: tst
                  steps:
                    - step:
                        type: Run
                        name: Run_1
                        identifier: Run_1
                        spec:
                          connectorRef: account.harnessImage
                          image: nginx
                          shell: Bash
                          command: |-
                            echo "hello World"

                            sleep 30
                          outputVariables:
                            - name: yours
                              type: Secret
                              value: hhhhh
                        failureStrategies:
                          - onFailure:
                              errors:
                                - AllErrors
                              action:
                                type: Abort
                        strategy:
                          parallelism: 5
                  variables:
                    - name: name
                      type: String
                      value: you
                      description: ""
                      required: false
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
  variables:
    - name: envvar
      type: String
      description: ""
      required: false
      value: <+env.name>
    - name: envvar2
      type: String
      description: ""
      required: false
      value: <+env.type>
